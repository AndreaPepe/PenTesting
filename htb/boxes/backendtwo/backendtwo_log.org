#+title: HTB - Backend Two
#+author: Andrea Pepe
#+date: <2022-05-15 dom>

* Foothold
** nmap 
   #+begin_example
$ sudo nmap -sC -sV backendtwo                                                          1 ⚙
Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-15 12:38 CEST
Nmap scan report for backendtwo (10.10.11.162)
Host is up (0.074s latency).
Not shown: 998 closed tcp ports (reset)
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 ea:84:21:a3:22:4a:7d:f9:b5:25:51:79:83:a4:f5:f2 (RSA)
|   256 b8:39:9e:f4:88:be:aa:01:73:2d:10:fb:44:7f:84:61 (ECDSA)
|_  256 22:21:e9:f4:85:90:87:45:16:1f:73:36:41:ee:3b:32 (ED25519)
80/tcp open  http    uvicorn
| fingerprint-strings: 
|   DNSStatusRequestTCP, DNSVersionBindReqTCP, GenericLines, RTSPRequest, SSLSessionReq, TLSSessionReq, TerminalServerCookie: 
|     HTTP/1.1 400 Bad Request
|     content-type: text/plain; charset=utf-8
|     Connection: close
|     Invalid HTTP request received.
|   FourOhFourRequest: 
|     HTTP/1.1 404 Not Found
|     date: Sun, 15 May 2022 10:58:42 GMT
|     server: uvicorn
|     content-length: 22
|     content-type: application/json
|     Connection: close
|     {"detail":"Not Found"}
|   GetRequest: 
|     HTTP/1.1 200 OK
|     date: Sun, 15 May 2022 10:58:31 GMT
|     server: uvicorn
|     content-length: 22
|     content-type: application/json
|     Connection: close
|     {"msg":"UHC Api v2.0"}
|   HTTPOptions: 
|     HTTP/1.1 405 Method Not Allowed
|     date: Sun, 15 May 2022 10:58:37 GMT
|     server: uvicorn
|     content-length: 31
|     content-type: application/json
|     Connection: close
|_    {"detail":"Method Not Allowed"}
|_http-title: Site doesn't have a title (application/json).
|_http-server-header: uvicorn
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port80-TCP:V=7.92%I=7%D=5/15%Time=6280D848%P=x86_64-pc-linux-gnu%r(GetR
SF:equest,A6,"HTTP/1\.1\x20200\x20OK\r\ndate:\x20Sun,\x2015\x20May\x202022
SF:\x2010:58:31\x20GMT\r\nserver:\x20uvicorn\r\ncontent-length:\x2022\r\nc
SF:ontent-type:\x20application/json\r\nConnection:\x20close\r\n\r\n{\"msg\
SF:":\"UHC\x20Api\x20v2\.0\"}")%r(HTTPOptions,BF,"HTTP/1\.1\x20405\x20Meth
SF:od\x20Not\x20Allowed\r\ndate:\x20Sun,\x2015\x20May\x202022\x2010:58:37\
SF:x20GMT\r\nserver:\x20uvicorn\r\ncontent-length:\x2031\r\ncontent-type:\
SF:x20application/json\r\nConnection:\x20close\r\n\r\n{\"detail\":\"Method
SF:\x20Not\x20Allowed\"}")%r(RTSPRequest,76,"HTTP/1\.1\x20400\x20Bad\x20Re
SF:quest\r\ncontent-type:\x20text/plain;\x20charset=utf-8\r\nConnection:\x
SF:20close\r\n\r\nInvalid\x20HTTP\x20request\x20received\.")%r(FourOhFourR
SF:equest,AD,"HTTP/1\.1\x20404\x20Not\x20Found\r\ndate:\x20Sun,\x2015\x20M
SF:ay\x202022\x2010:58:42\x20GMT\r\nserver:\x20uvicorn\r\ncontent-length:\
SF:x2022\r\ncontent-type:\x20application/json\r\nConnection:\x20close\r\n\
SF:r\n{\"detail\":\"Not\x20Found\"}")%r(GenericLines,76,"HTTP/1\.1\x20400\
SF:x20Bad\x20Request\r\ncontent-type:\x20text/plain;\x20charset=utf-8\r\nC
SF:onnection:\x20close\r\n\r\nInvalid\x20HTTP\x20request\x20received\.")%r
SF:(DNSVersionBindReqTCP,76,"HTTP/1\.1\x20400\x20Bad\x20Request\r\ncontent
SF:-type:\x20text/plain;\x20charset=utf-8\r\nConnection:\x20close\r\n\r\nI
SF:nvalid\x20HTTP\x20request\x20received\.")%r(DNSStatusRequestTCP,76,"HTT
SF:P/1\.1\x20400\x20Bad\x20Request\r\ncontent-type:\x20text/plain;\x20char
SF:set=utf-8\r\nConnection:\x20close\r\n\r\nInvalid\x20HTTP\x20request\x20
SF:received\.")%r(SSLSessionReq,76,"HTTP/1\.1\x20400\x20Bad\x20Request\r\n
SF:content-type:\x20text/plain;\x20charset=utf-8\r\nConnection:\x20close\r
SF:\n\r\nInvalid\x20HTTP\x20request\x20received\.")%r(TerminalServerCookie
SF:,76,"HTTP/1\.1\x20400\x20Bad\x20Request\r\ncontent-type:\x20text/plain;
SF:\x20charset=utf-8\r\nConnection:\x20close\r\n\r\nInvalid\x20HTTP\x20req
SF:uest\x20received\.")%r(TLSSessionReq,76,"HTTP/1\.1\x20400\x20Bad\x20Req
SF:uest\r\ncontent-type:\x20text/plain;\x20charset=utf-8\r\nConnection:\x2
SF:0close\r\n\r\nInvalid\x20HTTP\x20request\x20received\.");
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 66.49 seconds
   #+end_example

   #+begin_example
$ nmap -p- backendtwo        
Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-15 12:39 CEST
Nmap scan report for backendtwo (10.10.11.162)
Host is up (0.073s latency).
Not shown: 65533 closed tcp ports (conn-refused)
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http

Nmap done: 1 IP address (1 host up) scanned in 45.36 seconds
   #+end_example

** gobuster
   #+begin_example
$ gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://backendtwo  
===============================================================
Gobuster v3.1.0
by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)
===============================================================
[+] Url:                     http://backendtwo
[+] Method:                  GET
[+] Threads:                 10
[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Negative Status codes:   404
[+] User Agent:              gobuster/3.1.0
[+] Timeout:                 10s
===============================================================
2022/05/15 12:45:31 Starting gobuster in directory enumeration mode
===============================================================
/docs                 (Status: 401) [Size: 30]
/api                  (Status: 200) [Size: 19]
   #+end_example

** Web server
Il web server esposto sulla porta tcp/80 utilizza ~Uvicorn~,
un'implementazione di un web server ASGI (Asynchronous Server Gateway
Interface), con cui è possibile creare della sorta di API REST.

#+begin_example
http://backendtwo

{"msg":"UHC Api v2.0"}
#+end_example

#+begin_example
http://backendtwo/docs

{"detail":"Not authenticated"}
#+end_example

#+begin_example
http://backendtwo/api

{"endpoints":"/v1"}
#+end_example

#+begin_example
http://backendtwo/api/v1

{"endpoints":["/user","/admin"]}
#+end_example

#+begin_example
http://backendtwo/api/v1/admin

{"detail":"Not authenticated"}
#+end_example

#+begin_example
http://backendtwo/api/v1/user

{"detail":"Not Found"}
#+end_example

Si nota che l'URL viene indicato come segue nel browser:
*http://backendtwo/ap1/v1/user/*.
Quindi user/ è una directory e tipicamente si accede ai vari utenti
tramite id numerico. Proviamo quindi alcuni numeri:

#+begin_example
http://backendtwo/api/v1/user/1

{"guid":"25d386cd-b808-4107-8d3a-4277a0443a6e",
"email":"admin@backendtwo.htb",
"profile":"UHC Admin",
"last_update":null,
"time_created":1650987800991,
"is_superuser":true,"id":1}
#+end_example

#+begin_example
http://backendtwo/api/v1/user/2

{"guid":"89c0b058-2ae2-49f8-bb07-5e8dcb2d196c",
"email":"guest@backendtwo.htb",
"profile":"UHC Guest",
"last_update":null,
"time_created":1650987817546,
"is_superuser":false,
"id":2}
#+end_example

Ce ne sono anche altri ... 

Ecco un elenco completo ottentuto facendo un ciclo for in bash con il
comando *curl* e rendendolo bene in json col comando *jq*

#+begin_src json
[
  {
    "guid": "25d386cd-b808-4107-8d3a-4277a0443a6e",
    "email": "admin@backendtwo.htb",
    "profile": "UHC Admin",
    "last_update": null,
    "time_created": 1650987800991,
    "is_superuser": true,
    "id": 1
  },
  {
    "guid": "89c0b058-2ae2-49f8-bb07-5e8dcb2d196c",
    "email": "guest@backendtwo.htb",
    "profile": "UHC Guest",
    "last_update": null,
    "time_created": 1650987817546,
    "is_superuser": false,
    "id": 2
  },
  {
    "guid": "ed63f350-2b39-4aef-9acc-ce3da85a7f2c",
    "email": "big0us@backendtwo.htb",
    "profile": "UHC Player",
    "last_update": null,
    "time_created": 1650987858731,
    "is_superuser": false,
    "id": 3
  },
  {
    "guid": "732b806f-b576-4ed1-bc4f-286c593c5946",
    "email": "celesian@backendtwo.htb",
    "profile": "UHC Player",
    "last_update": null,
    "time_created": 1650987862257,
    "is_superuser": false,
    "id": 4
  },
  {
    "guid": "b76065ed-3677-4f67-9bea-077ce9b4d0e6",
    "email": "luska@backendtwo.htb",
    "profile": "UHC Player",
    "last_update": null,
    "time_created": 1650987868441,
    "is_superuser": false,
    "id": 5
  },
  {
    "guid": "74f9abab-297e-48f6-9574-14f669c704eb",
    "email": "otafe@backendtwo.htb",
    "profile": "UHC Player",
    "last_update": null,
    "time_created": 1650987872364,
    "is_superuser": false,
    "id": 6
  },
  {
    "guid": "637d28c3-3cee-426c-af7c-d49848b84653",
    "email": "watchdog@backendtwo.htb",
    "profile": "UHC Player",
    "last_update": null,
    "time_created": 1650987876404,
    "is_superuser": false,
    "id": 7
  },
  {
    "guid": "e76f9045-cbe1-484a-aaa0-7d8a81a3c8d5",
    "email": "mydonut@backendtwo.htb",
    "profile": "UHC Player",
    "last_update": null,
    "time_created": 1650987882171,
    "is_superuser": false,
    "id": 8
  },
  {
    "guid": "856dbb4b-8d6c-492f-81a9-17af62f98794",
    "email": "bee@backendtwo.htb",
    "profile": "UHC Player",
    "last_update": null,
    "time_created": 1650987915911,
    "is_superuser": false,
    "id": 9
  },
  {
    "guid": "48315ba5-4a93-4b9d-95ea-1af0cf41ff27",
    "email": "waid@backendtwo.htb",
    "profile": "UHC Player",
    "last_update": null,
    "time_created": 1650987919215,
    "is_superuser": false,
    "id": 10
  },
  {
    "guid": "e412dc13-282f-45d8-80e3-7cabb5e73373",
    "email": "freddie@backendtwo.htb",
    "profile": "UHC Player",
    "last_update": null,
    "time_created": 1650987948365,
    "is_superuser": false,
    "id": 11
  },
  {
    "guid": "e0fcdd30-b600-4d17-9cd8-38845502d33e",
    "email": "user@user.com",
    "profile": null,
    "last_update": null,
    "time_created": 1652624199214,
    "is_superuser": false,
    "id": 12
  },
  {
    "guid": "3e8d2e38-a65d-416f-aa9a-7189de1f691f",
    "email": "qwerty@qwerty.com",
    "profile": null,
    "last_update": null,
    "time_created": 1652624768974,
    "is_superuser": false,
    "id": 13
  }
]
#+end_src

** feroxbuster
Ottimo tool per fare enumerazione di APIs
#+begin_example
$ feroxbuster -u http://backendtwo/api/v1/user --force-recursion -C 404,405 -m POST                                                                                                                                                 1 ⨯ 1 ⚙

 ___  ___  __   __     __      __         __   ___
|__  |__  |__) |__) | /  `    /  \ \_/ | |  \ |__
|    |___ |  \ |  \ | \__,    \__/ / \ | |__/ |___
by Ben "epi" Risher 🤓                 ver: 2.7.0
───────────────────────────┬──────────────────────
 🎯  Target Url            │ http://backendtwo/api/v1/user
 🚀  Threads               │ 50
 📖  Wordlist              │ /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt
 💢  Status Code Filters   │ [404, 405]
 💥  Timeout (secs)        │ 7
 🦡  User-Agent            │ feroxbuster/2.7.0
 💉  Config File           │ /etc/feroxbuster/ferox-config.toml
 🏁  HTTP methods          │ [POST]
 🔃  Recursion Depth       │ 4
 🤘  Force Recursion       │ true
 🎉  New Version Available │ https://github.com/epi052/feroxbuster/releases/latest
───────────────────────────┴──────────────────────
 🏁  Press [ENTER] to use the Scan Management Menu™
──────────────────────────────────────────────────
422     POST        1l        3w      172c http://backendtwo/api/v1/user/login
422     POST        1l        2w       81c http://backendtwo/api/v1/user/signup
[####################] - 3m     90000/90000   0s      found:2       errors:0      
[####################] - 3m     30000/30000   160/s   http://backendtwo/api/v1/user 
[####################] - 3m     30000/30000   160/s   http://backendtwo/api/v1/user/login 
[####################] - 3m     30000/30000   160/s   http://backendtwo/api/v1/user/signup 
#+end_example

Abbiamo trovato due path interessanti:
- *http://backendtwo/api/v1/user/login*
- *http://backendtwo/api/v1/user/signup*

** login/signup
   #+begin_example
$ curl -X POST http://backendtwo/api/v1/user/signup | jq .                                                                                                                                                                              1 ⚙
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    81  100    81    0     0    539      0 --:--:-- --:--:-- --:--:--   540
{
  "detail": [
    {
      "loc": [
        "body"
      ],
      "msg": "field required",
      "type": "value_error.missing"
    }
  ]
}
   #+end_example


   #+begin_example
$ curl -s -X POST http://backendtwo/api/v1/user/signup -H 'Content-Type: application/json' -d '{"email":"andrea"}' | jq .                                                                                                               1 ⚙
{
  "detail": [
    {
      "loc": [
        "body",
        "email"
      ],
      "msg": "value is not a valid email address",
      "type": "value_error.email"
    },
    {
      "loc": [
        "body",
        "password"
      ],
      "msg": "field required",
      "type": "value_error.missing"
    }
  ]
}
   #+end_example

Vediamo che provando a fare una richiesta del genere ci dice che
l'email non è valida e che manca il campo password. Proviamo a fare un
signup successful.

#+begin_example
$ curl -s -X POST http://backendtwo/api/v1/user/signup -H 'Content-Type: application/json' -d '{"email":"andrea@htb.com", "password":"password"}' | jq .                                                                                1 ⚙
{}
#+end_example

Sembra che siamo riusciti ad iscriverci con credenziali:
- email: ~andrea@htb.com~
- password: ~password~

#+begin_example
$ curl -s -X POST http://backendtwo/api/v1/user/login -H 'Content-Type: application/json' -d '{"username":"andrea", "password":"password"}' | jq .                                                                                      1 ⚙
{
  "detail": [
    {
      "loc": [
        "body",
        "username"
      ],
      "msg": "field required",
      "type": "value_error.missing"
    },
    {
      "loc": [
        "body",
        "password"
      ],
      "msg": "field required",
      "type": "value_error.missing"
    }
  ]
}
#+end_example

Se proviamo ad effettuare il login, ci dice che manca il campo
username quando invece lo abbiamo inserito. Proviamo a passare i
parametri URL encoded anziché tramite json.

#+begin_example
$ curl -s -X POST http://backendtwo/api/v1/user/login -d 'username=andrea@htb.com&password=password' | jq .                                                                                                                             1 ⚙
{
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzX3Rva2VuIiwiZXhwIjoxNjUzMzIxNDI1LCJpYXQiOjE2NTI2MzAyMjUsInN1YiI6IjEyIiwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwiZ3VpZCI6ImUzNzZjYjRjLTc5NjUtNDE3OC1hMGNlLTE2OGE3ODcxYjBiMSJ9.p2pBvigV8xgUCIXBqDNcF1yVEWG4gghvEdJ7E0Gg-jM",
  "token_type": "bearer"
}
#+end_example

Funziona, ci viene dato un *access token*.


Proviamo ad autenticarci alla pagina */docs* che prima ci negava
l'accesso perché non autenticati.
#+begin_example
GET /docs HTTP/1.1
Host: backendtwo
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: close
Upgrade-Insecure-Requests: 1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzX3Rva2VuIiwiZXhwIjoxNjUzMzIxNDI1LCJpYXQiOjE2NTI2MzAyMjUsInN1YiI6IjEyIiwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwiZ3VpZCI6ImUzNzZjYjRjLTc5NjUtNDE3OC1hMGNlLTE2OGE3ODcxYjBiMSJ9.p2pBvigV8xgUCIXBqDNcF1yVEWG4gghvEdJ7E0Gg-jM
#+end_example

L'ultima riga è stata aggiunta manualmente intercettando la
richiesta con ~Burp-suite~. Tuttavia ci sono dei problemi, si è usato
curl.
#+begin_example
$ curl http://backendtwo/docs -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzX3Rva2VuIiwiZXhwIjoxNjUzMzIzNDYyLCJpYXQiOjE2NTI2MzIyNjIsInN1YiI6IjEzIiwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwiZ3VpZCI6IjEyMDgyMzI4LWYxYmYtNDY0MC1hODQwLWFjZmRkZjQ3Yjg2ZCJ9.UjIyZbNktHTfOYo5BSGp11ISRbFf7tjcqXwK74z34m8' -vv
*   Trying 10.10.11.162:80...
* Connected to backendtwo (10.10.11.162) port 80 (#0)
> GET /docs HTTP/1.1
> Host: backendtwo
> User-Agent: curl/7.81.0
> Accept: */*
> Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzX3Rva2VuIiwiZXhwIjoxNjUzMzIzNDYyLCJpYXQiOjE2NTI2MzIyNjIsInN1YiI6IjEzIiwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwiZ3VpZCI6IjEyMDgyMzI4LWYxYmYtNDY0MC1hODQwLWFjZmRkZjQ3Yjg2ZCJ9.UjIyZbNktHTfOYo5BSGp11ISRbFf7tjcqXwK74z34m8
> 
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< date: Sun, 15 May 2022 16:34:29 GMT
< server: uvicorn
< content-length: 847
< content-type: text/html; charset=utf-8
< 

    <!DOCTYPE html>
    <html>
    <head>
    <link type="text/css" rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css">
    <link rel="shortcut icon" href="https://fastapi.tiangolo.com/img/favicon.png">
    <title>docs</title>
    </head>
    <body>
    <div id="swagger-ui">
    </div>
    <script src="https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js"></script>
    <!-- `SwaggerUIBundle` is now available on the page -->
    <script>
    const ui = SwaggerUIBundle({
        url: '/openapi.json',
    "dom_id": "#swagger-ui",
"layout": "BaseLayout",
"deepLinking": true,
"showExtensions": true,
"showCommonExtensions": true,

    presets: [
        SwaggerUIBundle.presets.apis,
        SwaggerUIBundle.SwaggerUIStandalonePreset
        ],
    })
    </script>
    </body>
    </html>
* Connection #0 to host backendtwo left intact
#+end_example

Veniamo reindirizzati allo url */openapi.json*. Seguiamolo sempre
autorizzandoci.

REQUEST
#+begin_example
GET /openapi.json HTTP/1.1
Host: backendtwo
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
DNT: 1
Connection: close
Upgrade-Insecure-Requests: 1
See-GPC: 1
Cache-Control: no-cache
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzX3Rva2VuIiwiZXhwIjoxNjUzMzIyNzc5LCJpYXQiOjE2NTI2MzE1NzksInN1YiI6IjEzIiwiaXNfc3VwZXJ1c2VyIjpmYWxzZSwiZ3VpZCI6IjEyMDgyMzI4LWYxYmYtNDY0MC1hODQwLWFjZmRkZjQ3Yjg2ZCJ9.vMX0E3Fv_ogYsaRfcf0fF5PTzYrg5Ohl5_W7ElooL4g
#+end_example

RESPONSE
#+begin_example
{"openapi":"3.0.2","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/":{"get":{"summary":"Root","description":"Root GET","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/api":{"get":{"summary":"Root","description":"/api endpoints","operationId":"root_api_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/api/v1":{"get":{"summary":"Root","description":"/api/v1 endpoints","operationId":"root_api_v1_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/docs":{"get":{"summary":"Get Documentation","operationId":"get_documentation_docs_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/openapi.json":{"get":{"summary":"Openapi","operationId":"openapi_openapi_json_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/user/{user_id}":{"get":{"tags":["user"],"summary":"Fetch User","description":"Fetch a user by ID","operationId":"fetch_user_api_v1_user__user_id__get","parameters":[{"required":true,"schema":{"title":"User Id","type":"integer"},"name":"user_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/user/{user_id}/edit":{"put":{"tags":["user"],"summary":"Edit Profile","description":"Edit the profile of a user","operationId":"edit_profile_api_v1_user__user_id__edit_put","parameters":[{"required":true,"schema":{"title":"User Id","type":"integer"},"name":"user_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/user/{user_id}/password":{"put":{"tags":["user"],"summary":"Edit Password","description":"Update the password of a user","operationId":"edit_password_api_v1_user__user_id__password_put","parameters":[{"required":true,"schema":{"title":"User Id","type":"integer"},"name":"user_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/user/login":{"post":{"tags":["user"],"summary":"Login","description":"Get the JWT for a user with data from OAuth2 request form body.","operationId":"login_api_v1_user_login_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_login_api_v1_user_login_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/user/signup":{"post":{"tags":["user"],"summary":"Create User Signup","description":"Create new user without the need to be logged in.","operationId":"create_user_signup_api_v1_user_signup_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSignup"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/admin/":{"get":{"tags":["admin"],"summary":"Admin Check","description":"Returns true if the user is admin","operationId":"admin_check_api_v1_admin__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/admin/get_user_flag":{"get":{"tags":["admin"],"summary":"Get User Flag","description":"Returns user flag","operationId":"get_user_flag_api_v1_admin_get_user_flag_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/admin/file/{file_name}":{"get":{"tags":["admin"],"summary":"Get File","description":"Returns a file on the server. File name input is encoded in base64_url","operationId":"get_file_api_v1_admin_file__file_name__get","parameters":[{"required":true,"schema":{"title":"File Name","type":"string"},"name":"file_name","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"post":{"tags":["admin"],"summary":"Write File","description":"Writes a file on the server. File name input is encoded in base64_url","operationId":"write_file_api_v1_admin_file__file_name__post","parameters":[{"required":true,"schema":{"title":"File Name","type":"string"},"name":"file_name","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WriteFile"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}}},"components":{"schemas":{"Body_login_api_v1_user_login_post":{"title":"Body_login_api_v1_user_login_post","required":["username","password"],"type":"object","properties":{"grant_type":{"title":"Grant Type","pattern":"password","type":"string"},"username":{"title":"Username","type":"string"},"password":{"title":"Password","type":"string"},"scope":{"title":"Scope","type":"string","default":""},"client_id":{"title":"Client Id","type":"string"},"client_secret":{"title":"Client Secret","type":"string"}}},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"PasswordUpdate":{"title":"PasswordUpdate","required":["password"],"type":"object","properties":{"password":{"title":"Password","type":"string"}}},"User":{"title":"User","type":"object","properties":{"guid":{"title":"Guid","type":"string"},"email":{"title":"Email","type":"string","format":"email"},"profile":{"title":"Profile","type":"string"},"last_update":{"title":"Last Update","type":"integer"},"time_created":{"title":"Time Created","type":"integer"},"is_superuser":{"title":"Is Superuser","type":"boolean","default":false},"id":{"title":"Id","type":"integer"}}},"UserSignup":{"title":"UserSignup","required":["email","password"],"type":"object","properties":{"email":{"title":"Email","type":"string","format":"email"},"password":{"title":"Password","type":"string"}}},"UserUpdate":{"title":"UserUpdate","required":["profile"],"type":"object","properties":{"profile":{"title":"Profile","type":"string"}}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}},"WriteFile":{"title":"WriteFile","required":["file"],"type":"object","properties":{"file":{"title":"File","type":"string"}}}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"/api/v1/user/login"}}}}}}
#+end_example

Facciamone un prettify usando *jq*.

#+begin_src json
{
  "openapi": "3.0.2",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root GET",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api": {
      "get": {
        "summary": "Root",
        "description": "/api endpoints",
        "operationId": "root_api_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1": {
      "get": {
        "summary": "Root",
        "description": "/api/v1 endpoints",
        "operationId": "root_api_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/docs": {
      "get": {
        "summary": "Get Documentation",
        "operationId": "get_documentation_docs_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/openapi.json": {
      "get": {
        "summary": "Openapi",
        "operationId": "openapi_openapi_json_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/user/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch User",
        "description": "Fetch a user by ID",
        "operationId": "fetch_user_api_v1_user__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{user_id}/edit": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Edit Profile",
        "description": "Edit the profile of a user",
        "operationId": "edit_profile_api_v1_user__user_id__edit_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/user/{user_id}/password": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Edit Password",
        "description": "Update the password of a user",
        "operationId": "edit_password_api_v1_user__user_id__password_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login",
        "description": "Get the JWT for a user with data from OAuth2 request form body.",
        "operationId": "login_api_v1_user_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_v1_user_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create User Signup",
        "description": "Create new user without the need to be logged in.",
        "operationId": "create_user_signup_api_v1_user_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Admin Check",
        "description": "Returns true if the user is admin",
        "operationId": "admin_check_api_v1_admin__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/get_user_flag": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get User Flag",
        "description": "Returns user flag",
        "operationId": "get_user_flag_api_v1_admin_get_user_flag_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/file/{file_name}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get File",
        "description": "Returns a file on the server. File name input is encoded in base64_url",
        "operationId": "get_file_api_v1_admin_file__file_name__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "File Name",
              "type": "string"
            },
            "name": "file_name",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Write File",
        "description": "Writes a file on the server. File name input is encoded in base64_url",
        "operationId": "write_file_api_v1_admin_file__file_name__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "File Name",
              "type": "string"
            },
            "name": "file_name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WriteFile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login_api_v1_user_login_post": {
        "title": "Body_login_api_v1_user_login_post",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "PasswordUpdate": {
        "title": "PasswordUpdate",
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "title": "Password",
            "type": "string"
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "guid": {
            "title": "Guid",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "profile": {
            "title": "Profile",
            "type": "string"
          },
          "last_update": {
            "title": "Last Update",
            "type": "integer"
          },
          "time_created": {
            "title": "Time Created",
            "type": "integer"
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "id": {
            "title": "Id",
            "type": "integer"
          }
        }
      },
      "UserSignup": {
        "title": "UserSignup",
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        }
      },
      "UserUpdate": {
        "title": "UserUpdate",
        "required": [
          "profile"
        ],
        "type": "object",
        "properties": {
          "profile": {
            "title": "Profile",
            "type": "string"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "WriteFile": {
        "title": "WriteFile",
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "title": "File",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/user/login"
          }
        }
      }
    }
  }
}
#+end_src

* Privilege escalation
